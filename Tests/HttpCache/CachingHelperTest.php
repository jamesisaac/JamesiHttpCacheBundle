<?php

namespace Jamesi\HttpCacheBundle\Tests\HttpCache;

use Jamesi\HttpCacheBundle\HttpCache\CachingHelper;

class CachingHelperTest extends \PHPUnit_Framework_TestCase
{
    protected $helper;
    protected $esiTag;
    
    protected function setUp()
    {
        $this->helper = new CachingHelper();
        
        // Example ESI tag
        $this->esiTag = '<esi:include src="/" onerror="continue" />';
    }
    
    protected function tearDown()
    {
        $this->helper = null;
    }
    
    /**
     * In this case, the tag exists because it was generated by Symfony
     * in for caching reasons
     */
    public function testEsiTagsRemainUnchanged()
    {
        $processed = $this->helper->processJsonContent($this->esiTag);
        
        $this->assertEquals($processed, $this->esiTag);
    }
    
    /**
     * Here, the tag exists because it's part of the literal content being
     * sent to the client (unlikely use-case, but it ensures that nothing
     * similar to an ESI tag will trigger the "leave unchanged" response
     */
    public function testJsonProcessed()
    {
        $processed = $this->helper->processJsonContent(json_encode($this->esiTag));
        
        $this->assertEquals($processed, $this->esiTag);
    }
}
